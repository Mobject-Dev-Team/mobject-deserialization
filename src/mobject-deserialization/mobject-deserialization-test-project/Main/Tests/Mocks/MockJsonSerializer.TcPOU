<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="MockJsonSerializer" Id="{5c468113-6413-4236-b1f5-198007202e32}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
// this code has been taken from mobject-json to prevent circular referencing 
FUNCTION_BLOCK MockJsonSerializer EXTENDS Disposable IMPLEMENTS I_Serializer;
VAR
	jsonSaxWriter : FB_JsonSaxWriter;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Destructor" Id="{c5392770-1e02-45ad-ae9c-3d4c67a1259d}" />
    <Method Name="AddBase64" Id="{51b4d659-0f6d-4cf9-8c14-5f174171c16b}">
      <Declaration><![CDATA[METHOD PUBLIC AddBase64 : I_Serializer
VAR_INPUT
	pBytes : POINTER TO BYTE;
	nBytes : DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonSaxWriter.AddBase64(pBytes, nBytes);
AddBase64 := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddBool" Id="{91aeeb87-96d9-4197-8f29-81683d636f32}">
      <Declaration><![CDATA[METHOD PUBLIC AddBool : I_Serializer
VAR_INPUT
	Value : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonSaxWriter.AddBool(Value);
AddBool := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddByte" Id="{86f70427-7cdc-0808-046d-59e912da2f85}">
      <Declaration><![CDATA[METHOD PUBLIC AddByte : I_Serializer
VAR_INPUT
	Value : BYTE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonSaxWriter.AddUDint(BYTE_TO_UDINT(Value));
AddByte := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddBytesAsHex" Id="{fa3edd50-7ad7-4509-aeed-0c6e64ad8a76}">
      <Declaration><![CDATA[METHOD PUBLIC AddBytesAsHex : I_Serializer
VAR_INPUT
	pBytes : POINTER TO BYTE;
	nBytes : DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonSaxWriter.AddHexBinary(pBytes, nBytes);
AddBytesAsHex := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddDateTime" Id="{7040fc75-ae99-4686-836f-4658099957f5}">
      <Declaration><![CDATA[METHOD PUBLIC AddDateTime : I_Serializer
VAR_INPUT
	Value : DATE_AND_TIME;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonSaxWriter.AddDateTime(Value);
AddDateTime := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddDcTime" Id="{36b0985b-e539-42dd-b1d5-a204b1f81698}">
      <Declaration><![CDATA[METHOD PUBLIC AddDcTime : I_Serializer
VAR_INPUT
	Value : DCTIME;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonSaxWriter.AddDcTime(Value);
AddDcTime := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddDint" Id="{e1b16d64-4a10-48b6-93b3-1f57b4bb9bce}">
      <Declaration><![CDATA[METHOD PUBLIC AddDint : I_Serializer
VAR_INPUT
	Value : DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonSaxWriter.AddDint(Value);
AddDint := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddDword" Id="{d6dc0641-243c-0058-2ead-75785476a517}">
      <Declaration><![CDATA[METHOD PUBLIC AddDword : I_Serializer
VAR_INPUT
	Value : DWORD;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonSaxWriter.AddUDint(DWORD_TO_UDINT(Value));
AddDword := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddFileTime" Id="{7a92ee82-d7bc-4890-8818-3b2b91762a22}">
      <Declaration><![CDATA[METHOD PUBLIC AddFileTime : I_Serializer
VAR_INPUT
	Value : FILETIME;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonSaxWriter.AddFileTime(Value);
AddFileTime := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddInt" Id="{a6f1ab30-c891-0b9d-042c-9981b1914124}">
      <Declaration><![CDATA[METHOD PUBLIC AddInt : I_Serializer
VAR_INPUT
	Value : INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonSaxWriter.AddDint(INT_TO_DINT(Value));
AddInt := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddKey" Id="{3e56bfe5-1240-4040-b64c-5aa2e856a677}">
      <Declaration><![CDATA[METHOD PUBLIC AddKey : I_Serializer
VAR_INPUT
	Key : T_MAXSTRING;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonSaxWriter.AddKey(Key);
AddKey := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddKeyBase64" Id="{de539b65-7cc8-4bc2-94f6-54016cb8de48}">
      <Declaration><![CDATA[METHOD PUBLIC AddKeyBase64 : I_Serializer
VAR_INPUT
	Key : T_MAXSTRING;
	pBytes : POINTER TO BYTE;
	nBytes : DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddKey(Key);
AddBase64(pBytes, nBytes);
AddKeyBase64 := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddKeyBool" Id="{1a2bf612-e7a2-4af0-a1b3-92212bdcf115}">
      <Declaration><![CDATA[METHOD PUBLIC AddKeyBool : I_Serializer
VAR_INPUT
	Key : T_MAXSTRING;
	Value : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddKey(Key);
AddBool(Value);
AddKeyBool := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddKeyByte" Id="{7db6a68e-bda7-024b-3d58-a5e413bbbf90}">
      <Declaration><![CDATA[METHOD PUBLIC AddKeyByte : I_Serializer
VAR_INPUT
	Key : T_MAXSTRING;
	Value : BYTE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddKey(Key);
AddByte(Value);
AddKeyByte := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddKeyBytesAsHex" Id="{eb0a7ebb-d05b-449a-bf88-f4da96b0b179}">
      <Declaration><![CDATA[METHOD PUBLIC AddKeyBytesAsHex : I_Serializer
VAR_INPUT
	Key : T_MAXSTRING;
	pBytes : POINTER TO BYTE;
	nBytes : DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddKey(Key);
AddBytesAsHex(pBytes, nBytes);
AddKeyBytesAsHex := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddKeyDateTime" Id="{a5a15fb9-28cf-41d0-a151-2bbfef687949}">
      <Declaration><![CDATA[METHOD PUBLIC AddKeyDateTime : I_Serializer
VAR_INPUT
	Key : T_MAXSTRING;
	Value : DATE_AND_TIME;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddKey(Key);
AddDateTime(Value);
AddKeyDateTime := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddKeyDcTime" Id="{e04c0421-fa80-42d5-8947-0d5863714a78}">
      <Declaration><![CDATA[METHOD PUBLIC AddKeyDcTime : I_Serializer
VAR_INPUT
	Key : T_MAXSTRING;
	Value : DCTIME;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddKey(Key);
AddDcTime(Value);
AddKeyDcTime := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddKeyDint" Id="{0b5d91a6-e199-47e9-b9c3-3732e4707132}">
      <Declaration><![CDATA[METHOD PUBLIC AddKeyDint : I_Serializer
VAR_INPUT
	Key : T_MAXSTRING;
	Value : DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddKey(Key);
AddDint(Value);
AddKeyDint := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddKeyDword" Id="{a8345fac-38fc-099c-3c5e-fcccfc0d9ebf}">
      <Declaration><![CDATA[METHOD PUBLIC AddKeyDword : I_Serializer
VAR_INPUT
	Key : T_MAXSTRING;
	Value : DWORD;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddKey(Key);
AddDword(Value);
AddKeyDword := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddKeyFileTime" Id="{e2b29bae-63dc-4901-be66-918cb71fcbf5}">
      <Declaration><![CDATA[METHOD PUBLIC AddKeyFileTime : I_Serializer
VAR_INPUT
	Key : T_MAXSTRING;
	Value : FILETIME;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddKey(Key);
AddFileTime(Value);
AddKeyFileTime := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddKeyInt" Id="{3f38a29a-00c6-004e-1e67-5a68dd77f382}">
      <Declaration><![CDATA[METHOD PUBLIC AddKeyInt : I_Serializer
VAR_INPUT
	Key : T_MAXSTRING;
	Value : INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddKey(Key);
AddInt(Value);
AddKeyInt := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddKeyLint" Id="{6f9a97df-30c5-4c36-8621-56c00d19d1e2}">
      <Declaration><![CDATA[METHOD PUBLIC AddKeyLint : I_Serializer
VAR_INPUT
	Key : T_MAXSTRING;
	Value : LINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddKey(Key);
AddLint(Value);
AddKeyLint := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddKeyLreal" Id="{c1d61a16-3535-4744-b396-d3f5b61997bd}">
      <Declaration><![CDATA[METHOD PUBLIC AddKeyLreal : I_Serializer
VAR_INPUT
	Key : T_MAXSTRING;
	Value : LREAL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddKey(Key);
AddLreal(Value);
AddKeyLreal := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddKeyLtime" Id="{bfe2f437-fd9f-0043-0346-d515c5795d73}">
      <Declaration><![CDATA[METHOD PUBLIC AddKeyLtime : I_Serializer
VAR_INPUT
	Key : T_MAXSTRING;
	Value : LTIME;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddKey(Key);
AddLTIME(Value);
AddKeyLtime := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddKeyLword" Id="{0a3517cf-1013-0f1e-080b-57cca24ba251}">
      <Declaration><![CDATA[METHOD PUBLIC AddKeyLword : I_Serializer
VAR_INPUT
	Key : T_MAXSTRING;
	Value : LWORD;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddKey(Key);
AddLword(Value);
AddKeyLword := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddKeyNull" Id="{ce35913c-afce-4303-abf5-21380e4b3fa5}">
      <Declaration><![CDATA[METHOD PUBLIC AddKeyNull : I_Serializer
VAR_INPUT
	Key : T_MAXSTRING;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddKey(Key);
AddNull();
AddKeyNull := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddKeyObject" Id="{8123a1cb-a791-010b-0768-7fecc46cb285}">
      <Declaration><![CDATA[METHOD PUBLIC AddKeyObject : I_Serializer
VAR_INPUT
	Key : T_MAXSTRING;
	Object : I_Serializable;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddKey(Key);
Object.SerializeWith(THIS^);
AddKeyObject := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddKeyRawJson" Id="{0ac9cd8b-2275-0d80-2bf1-4295b72286d4}">
      <Declaration><![CDATA[METHOD PUBLIC AddKeyRawJson : I_Serializer
VAR_INPUT
	Key : T_MAXSTRING;
	RawObject : REFERENCE TO STRING;;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddKey(Key);
AddRawJson(RawObject);
AddKeyRawJson := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddKeyReal" Id="{6cbe4687-ca89-4cd7-8db2-5e0389c78666}">
      <Declaration><![CDATA[METHOD PUBLIC AddKeyReal : I_Serializer
VAR_INPUT
	Key : T_MAXSTRING;
	Value : REAL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddKey(Key);
AddReal(Value);
AddKeyReal := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddKeySint" Id="{d4d9364f-e110-0d97-21aa-74332b7f8a48}">
      <Declaration><![CDATA[METHOD PUBLIC AddKeySint : I_Serializer
VAR_INPUT
	Key : T_MAXSTRING;
	Value : SINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddKey(Key);
AddSint(Value);
AddKeySint := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddKeyString" Id="{378f55ad-c61e-0f5a-1296-985f75a2cfd1}">
      <Declaration><![CDATA[METHOD PUBLIC AddKeyString : I_Serializer
VAR_INPUT
	Key : T_MAXSTRING;
	Value : T_MAXSTRING;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddKey(Key);
AddString(Value);
AddKeyString := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddKeyStringByRef" Id="{d65092ed-0734-4bd0-8a93-5ed86747a4d6}">
      <Declaration><![CDATA[METHOD PUBLIC AddKeyStringByRef : I_Serializer
VAR_INPUT
	Key : T_MAXSTRING;
	Value : REFERENCE TO STRING;;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddKey(Key);
AddStringByRef(Value);
AddKeyStringByRef := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddKeyTime" Id="{e4b74ce4-ea86-00ec-3794-edd538b6ddd6}">
      <Declaration><![CDATA[METHOD PUBLIC AddKeyTime : I_Serializer
VAR_INPUT
	Key : T_MAXSTRING;
	Value : TIME;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddKey(Key);
AddTime(Value);
AddKeyTime := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddKeyTod" Id="{db55c8c4-2c09-0be2-18e8-fccc95cfc3e8}">
      <Declaration><![CDATA[METHOD PUBLIC AddKeyTod : I_Serializer
VAR_INPUT
	Key : T_MAXSTRING;
	Value : TOD;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddKey(Key);
AddTod(Value);
AddKeyTod := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddKeyUdint" Id="{e3d994b3-034b-4857-98dc-8797b2c4142c}">
      <Declaration><![CDATA[METHOD PUBLIC AddKeyUdint : I_Serializer
VAR_INPUT
	Key : T_MAXSTRING;
	Value : UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddKey(Key);
AddUdint(Value);
AddKeyUdint := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddKeyUint" Id="{814b0a6d-3d9d-09be-1dba-b79cc48f1b2c}">
      <Declaration><![CDATA[METHOD PUBLIC AddKeyUint : I_Serializer
VAR_INPUT
	Key : T_MAXSTRING;
	Value : UINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddKey(Key);
AddUint(Value);
AddKeyUint := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddKeyUlint" Id="{cd030209-3293-418b-a2c8-7bf608c90d6e}">
      <Declaration><![CDATA[METHOD PUBLIC AddKeyUlint : I_Serializer
VAR_INPUT
	Key : T_MAXSTRING;
	Value : ULINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddKey(Key);
AddUlint(Value);
AddKeyUlint := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddKeyUsint" Id="{6aebd572-1a58-0cbb-0917-453d379180f8}">
      <Declaration><![CDATA[METHOD PUBLIC AddKeyUsint : I_Serializer
VAR_INPUT
	Key : T_MAXSTRING;
	Value : USINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddKey(Key);
AddUsint(Value);
AddKeyUsint := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddKeyWord" Id="{1c92b0c8-42d7-0be4-3381-89f886996899}">
      <Declaration><![CDATA[METHOD PUBLIC AddKeyWord : I_Serializer
VAR_INPUT
	Key : T_MAXSTRING;
	Value : WORD;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddKey(Key);
AddWord(Value);
AddKeyWord := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddLint" Id="{0a3953fc-63d5-4717-8a41-87e6dda0ac6c}">
      <Declaration><![CDATA[METHOD PUBLIC AddLint : I_Serializer
VAR_INPUT
	Value : LINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonSaxWriter.AddLint(Value);
AddLint := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddLreal" Id="{37752174-4424-4000-ae4a-5c8a7348404e}">
      <Declaration><![CDATA[METHOD PUBLIC AddLreal : I_Serializer
VAR_INPUT
	Value : LREAL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonSaxWriter.AddLreal(Value);
AddLreal := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddLtime" Id="{7df0b77f-25a8-0fad-36eb-e597a9de319f}">
      <Declaration><![CDATA[METHOD PUBLIC AddLtime : I_Serializer
VAR_INPUT
	Value : LTIME;
END_VAR
VAR
	converted : T_MAXSTRING;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[converted := LTIME_TO_STRING(Value);
jsonSaxWriter.AddString(converted);
AddLtime := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddLword" Id="{4c617fc1-9305-034d-0b5e-920c01d24492}">
      <Declaration><![CDATA[METHOD PUBLIC AddLword : I_Serializer
VAR_INPUT
	Value : LWORD;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonSaxWriter.AddUlint(LWORD_TO_ULINT(Value));
AddLword := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddNull" Id="{d9c8a65c-e63e-4cfd-b7ae-1c92827b077b}">
      <Declaration><![CDATA[METHOD PUBLIC AddNull : I_Serializer
VAR_INPUT
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonSaxWriter.AddNull();
AddNull := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddObject" Id="{70cf657a-4730-0a79-2dc6-6eeb4446994a}">
      <Declaration><![CDATA[METHOD PUBLIC AddObject
VAR_INPUT
	Object : I_Serializable;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Object.SerializeWith(This^);]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddRawJson" Id="{ef8a70f0-00dd-4190-b22e-b3e5c2c29fa9}">
      <Declaration><![CDATA[METHOD PUBLIC AddRawJson
VAR_INPUT
	RawObject : REFERENCE TO STRING;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonSaxWriter.AddRawObject(RawObject);]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddReal" Id="{2428c30e-6e70-490c-9baf-9d82829c7c99}">
      <Declaration><![CDATA[METHOD PUBLIC AddReal : I_Serializer
VAR_INPUT
	Value : REAL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[// real to lreal is used to negate an issue with TC4024.55 which prevents max REAL from being serailized.  
// so a REAL_TO_LREAL conversion is made to ensure this is always possible.  
jsonSaxWriter.AddLReal(REAL_TO_LREAL(Value));
AddReal := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddSint" Id="{6d0bfabe-45b9-09de-09eb-b8043854cbf3}">
      <Declaration><![CDATA[METHOD PUBLIC AddSint : I_Serializer
VAR_INPUT
	Value : SINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonSaxWriter.AddDint(SINT_TO_DINT(Value));
AddSint := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddString" Id="{1d44e1a2-b868-032c-139a-466255f53517}">
      <Declaration><![CDATA[METHOD PUBLIC AddString : I_Serializer
VAR_INPUT
	Value : T_MAXSTRING;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonSaxWriter.AddString(Value);
AddString := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddStringByRef" Id="{935aa191-786c-4c6f-9184-6b9530f03d10}">
      <Declaration><![CDATA[METHOD PUBLIC AddStringByRef : I_Serializer
VAR_INPUT
	Value : REFERENCE TO STRING;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonSaxWriter.AddString(Value);
AddStringByRef := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddTime" Id="{17a531a3-a506-0777-05ae-0d0df12299b1}">
      <Declaration><![CDATA[METHOD PUBLIC AddTime : I_Serializer
VAR_INPUT
	Value : TIME;
END_VAR
VAR
	converted : T_MAXSTRING;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[converted := TIME_TO_STRING(Value);
jsonSaxWriter.AddString(converted);
AddTime := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddTod" Id="{7e23a924-acbd-0253-2901-05f397f877f9}">
      <Declaration><![CDATA[METHOD PUBLIC AddTod : I_Serializer
VAR_INPUT
	Value : TOD;
END_VAR
VAR
	converted : T_MAXSTRING;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[converted := TOD_TO_STRING(Value);
jsonSaxWriter.AddString(converted);
AddTod := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddUdint" Id="{c1e2be65-6835-40de-b721-d98eddb1eba1}">
      <Declaration><![CDATA[METHOD PUBLIC AddUdint : I_Serializer
VAR_INPUT
	Value : UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonSaxWriter.AddUdint(Value);
AddUdint := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddUint" Id="{ecbab9b6-9f21-04e1-05c1-6c873ffae424}">
      <Declaration><![CDATA[METHOD PUBLIC AddUint : I_Serializer
VAR_INPUT
	Value : UINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonSaxWriter.AddDint(UINT_TO_DINT(Value));
AddUint := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddUlint" Id="{fb61c336-6f31-4fb1-b8ae-90060e6d9658}">
      <Declaration><![CDATA[METHOD PUBLIC AddUlint : I_Serializer
VAR_INPUT
	Value : ULINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonSaxWriter.AddUlint(Value);
AddUlint := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddUsint" Id="{af3cdb6f-ba9a-0a9b-3276-b67e7296547e}">
      <Declaration><![CDATA[METHOD PUBLIC AddUsint : I_Serializer
VAR_INPUT
	Value : USINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonSaxWriter.AddDint(USINT_TO_DINT(Value));
AddUsint := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddWord" Id="{3b2f1ced-1f56-0a41-2506-967d1f682221}">
      <Declaration><![CDATA[METHOD PUBLIC AddWord : I_Serializer
VAR_INPUT
	Value : WORD;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonSaxWriter.AddUDint(WORD_TO_UDINT(Value));
AddWord := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{39229b69-e8e5-4d32-9a15-76374ef6eb71}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Serializer
VAR
	pClone : POINTER TO MockJsonSerializer;
	jsonSize : UDINT;
	pJsonString : POINTER TO STRING;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(MockJsonSerializer);
Clone := pClone^;

jsonSize := jsonSaxWriter.GetDocumentLength();

IF jsonSize = 0 THEN
	// no further cloning to do. 
	RETURN;
END_IF

pJsonString := __NEW(BYTE, jsonSize);

IF jsonSaxWriter.CopyDocument(pJsonString^, jsonSize) = 0 THEN
	__DELETE(pJsonString);
	RETURN;
END_IF

pClone^.AddRawJson(pJsonString^);
__DELETE(pJsonString);]]></ST>
      </Implementation>
    </Method>
    <Method Name="EndArray" Id="{fdb5ef05-ccc4-4546-9034-2a53d6f1fe23}">
      <Declaration><![CDATA[METHOD PUBLIC EndArray : I_Serializer
VAR_INPUT
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonSaxWriter.EndArray();
EndArray := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="EndObject" Id="{64bbfa7d-defe-4e89-a0aa-9dee5be90d40}">
      <Declaration><![CDATA[METHOD PUBLIC EndObject : I_Serializer
VAR_INPUT
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonSaxWriter.EndObject();
EndObject := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_exit" Id="{c08d3ea4-46a8-49e6-a7c1-b6de4c597be7}" FolderPath="Destructor\">
      <Declaration><![CDATA[METHOD FB_exit : BOOL
VAR_INPUT
	bInCopyCode : BOOL; // if TRUE, the exit method is called for exiting an instance that is copied afterwards (online change).
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF bInCopyCode THEN
	RETURN;
END_IF

jsonSaxWriter.ResetDocument();]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetSerializedDataLength" Id="{e046e178-bf01-4f3a-8cd1-92de9d618022}">
      <Declaration><![CDATA[METHOD PUBLIC GetSerializedDataLength : UDINT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[GetSerializedDataLength := jsonSaxWriter.GetDocumentLength();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Reset" Id="{395f43d0-6e26-442c-80de-2bca5d655935}">
      <Declaration><![CDATA[METHOD PUBLIC Reset
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonSaxWriter.ResetDocument();]]></ST>
      </Implementation>
    </Method>
    <Method Name="StartArray" Id="{a80036c0-6937-4fe8-b582-f0fc948d5386}">
      <Declaration><![CDATA[METHOD PUBLIC StartArray : I_Serializer
VAR_INPUT
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonSaxWriter.StartArray();
StartArray := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="StartObject" Id="{1a12be3b-213f-49f6-aceb-dc3f272713bb}">
      <Declaration><![CDATA[METHOD PUBLIC StartObject : I_Serializer
VAR_INPUT
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[jsonSaxWriter.StartObject();
StartObject := THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryCopySerializedData" Id="{cbf96a15-e9a6-4857-aa7f-c20117093fe8}">
      <Declaration><![CDATA[METHOD TryCopySerializedData : BOOL
VAR_INPUT
	DestinationAddress : PVOID;
	DestinationSize : UDINT;
END_VAR
VAR
	pString : POINTER TO STRING;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pString := DestinationAddress;
TryCopySerializedData := jsonSaxWriter.CopyDocument(pString^, DestinationSize) > 0;]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetSerializedData" Id="{b031068f-03a8-44d9-81aa-51ae854d98c0}">
      <Declaration><![CDATA[METHOD TryGetSerializedData : BOOL
VAR_INPUT
	DestinationAddress : PVOID;
	DestinationSize : UDINT;
END_VAR
VAR
	pString : POINTER TO STRING;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pString := DestinationAddress;

IF jsonSaxWriter.CopyDocument(pString^, DestinationSize) = 0 THEN
	RETURN;
END_IF

jsonSaxWriter.ResetDocument();
TryGetSerializedData := TRUE;]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>